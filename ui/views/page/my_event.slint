import { Token } from "../../global.slint";
import { ScrollView } from "std-widgets.slint";
import { Page, Empty } from "../../components/index.slint";
import { STimeLine, STimeLineItem } from "../../modules/surrealism-ui/src/timeline/index.slint";
import { SCard } from "../../modules/surrealism-ui/src/card/index.slint";
import {SLink} from "../../modules/surrealism-ui/src/link/index.slint";
import { SDivider } from "../../modules/surrealism-ui/src/divider/index.slint";
import { SText } from "../../modules/surrealism-ui/src/text/index.slint";
import { STab } from "../../modules/surrealism-ui/src/tab/index.slint";
import { Icon } from "../../modules/surrealism-ui/src/icon/icon.slint";
import {SButton} from "../../modules/surrealism-ui/src/button/index.slint";
import { ViewManagerBridge, ViewName} from "../../logic/view_manager.slint";
import { ViewManager } from "../../logic/index.slint";
export global MyEventPageBridge { }




// 签到按钮
component SignButton inherits SButton{
    width: 40px;
    height: 20px;
    background: Token.color.surface;
    border-color: Token.color.outline;
    font-color: Token.color.on-surface;
    text: "签到";
    property <bool> active : true;
    clicked => {active = !active}
    states [
        active when  !active : {
            text : "取消";
        }
        inactive when active: {
            text : "签到";
        } 
    ]
}
// 评价按钮
component ReviewButton inherits SButton {
    width: 40px;
    height: 20px;
    property <string> txt : "评价";
    text: txt;
    background: Token.color.surface;
    border-color: Token.color.outline;
    font-color: Token.color.on-surface;
    clicked => {ViewManager.navigate-to(ViewName.HistoryPage)}
}
// 信息卡片部分
component Card inherits SCard{
    background: Token.color.surface-container-lowest;
    Icon {
        x: parent.x+30px;
        height: 50px;
        width: 50px;
        source: Token.image.icon.evento;
    }
    info := Rectangle{
        x: parent.x+80px;
        preferred-height: 200px;
        preferred-width: 200px;
        property <string> title : "标题";
        property <string> introduction : "介绍";
        property <string> content : "内容";
        VerticalLayout {
            alignment: center;
            SText {
                font-size: Token.font.headline.small.size;
                color: Token.color.outline;
                text: title;
            }
            SText{
                font-size: Token.font.label.small.size;
                color: Token.color.outline;
                text: introduction;
            }
            SText{
                font-size: Token.font.label.small.size;
                color: Token.color.outline;
                text: content;
            }
        }
    }
}
export component SignCard inherits Card{
    SignButton {
        x: parent.x+300px;
    }
}

export component ReviewCard inherits Card{
    ReviewButton {
        x: parent.x+300px;
    }
}

export component SignLine inherits STimeLine{
    STimeLineItem {
        width: (parent.width)+80px;
        height: parent.height;
        SignCard {
            x: (parent.x)-10px;
            y: parent.y;
            height: (parent.height)-50px;
            width: 350px;
        }
    }
}
export component StartLine inherits STimeLine{
    STimeLineItem {
        width: (parent.width)+80px;
        height: parent.height;
        Card {
            x: (parent.x)-10px;
            y: parent.y;
            height: (parent.height)-50px;
            width: 350px;
        }
    }
}
export component EndLine inherits STimeLine{
    STimeLineItem {
        width: (parent.width)+80px;
        height: parent.height;
        ReviewCard {
            x: (parent.x)-10px;
            y: parent.y;
            height: (parent.height)-50px;
            width: 350px;
        }
    }
}
// a simple event form
component SignForm {
    Rectangle {
        preferred-height: 200px;
        preferred-width: 500px;
        mes := Rectangle{
            x: (parent.x)+5px;
            preferred-height: 200px;
            preferred-width: 50px;
            property <string> data : "日期";
            property <string> place : "地点";
            property <string> time : "时间";
            VerticalLayout {
                alignment: center;
                SText {
                    color: Token.color.outline;
                    text: data;
                }
                SText{
                    color: Token.color.outline;
                    text: place;
                }
                SText{
                    color: Token.color.outline;
                    text: time;
                }
            }
        }
        SignLine {
            x: mes.x + 80px;
            width: 20px;
            height: parent.height;
        }
    }
}

component StartForm {
    Rectangle {
        preferred-height: 200px;
        preferred-width: 500px;
        mes := Rectangle{
            x: (parent.x)+5px;
            preferred-height: 200px;
            preferred-width: 50px;
            property <string> data : "日期";
            property <string> place : "地点";
            property <string> time : "时间";
            VerticalLayout {
                alignment: center;
                SText {
                    color: Token.color.outline;
                    text: data;
                }
                SText{
                    color: Token.color.outline;
                    text: place;
                }
                SText{
                    color: Token.color.outline;
                    text: time;
                }
            }
        }
        StartLine {
            x: mes.x + 80px;
            width: 20px;
            height: parent.height;
        }
    }
}

component EndForm {
    Rectangle {
        preferred-height: 200px;
        preferred-width: 500px;
        mes := Rectangle{
            x: (parent.x)+5px;
            preferred-height: 200px;
            preferred-width: 50px;
            property <string> data : "日期";
            property <string> place : "地点";
            property <string> time : "时间";
            VerticalLayout {
                alignment: center;
                SText {
                    color: Token.color.outline;
                    text: data;
                }
                SText{
                    color: Token.color.outline;
                    text: place;
                }
                SText{
                    color: Token.color.outline;
                    text: time;
                }
            }
        }
        EndLine {
            x: mes.x + 80px;
            width: 20px;
            height: parent.height;
        }
    }
}

// a simple component for schedule
component Schedule {
    preferred-height: 800px;
    preferred-width: 600px;
    in-out property <string> title : "";
    VerticalLayout {
        spacing: 5px;
        //title
        SText {
            x: (parent.width)/2-(parent.x)-50px;
            color: Token.color.on-surface;
            font-size: Token.font.title.large.size;
            text: title;
        }
        //SDvider
        SDivider {
            //y: parent.y+40px;
            width: 500px;
            height: 2px;
            }
        //SText && STimeLine (separate)
        @children
    }
}

export component MyEventPage inherits Page {
    // TODO: implement MyEvent
    // optional
    // ScrollView {
        background := Empty { }

        layout := Empty{}

        body := Empty {
            x: 0;
            y: 0px;
            width: 100%;
            height: 100%;
            //schedule timeline
            HorizontalLayout {
                signin-line := Schedule {
                    width: 50%;
                    height: 100%;
                    title: "已报名";
                    SignForm { }
                    SignForm { }
                    SignForm { }
                }
                VerticalLayout {
                    spacing: 150px;
                    start-line := Schedule { 
                        width: 50%;
                        title: "进行中";
                        StartForm { }
                    }
                    end-line := Schedule { 
                        width: 50%;
                        title: "已结束";
                        EndForm { }
                    }
                }
            }
            
            placeholder := Rectangle {
                border-width: 4px;
                border-color: red;
                // Text {
                //     text: "活动日程（我的活动）\n  未开始、进行中、已结束";
                // }
            }
        }
    //}
}


import { Token } from "../../global.slint";
import { ScrollView } from "std-widgets.slint";
import { Page, EventCard, EventStruct, PageStateLayer, PageState } from "../../components/index.slint";

export global MyEventPageBridge {
    in property <[EventStruct]> not-started-model;
    in property <[EventStruct]> active-model;
    in property <[EventStruct]> completed-model;
    in property <PageState> state: PageState.normal;
    in property <string> error-message;
    callback load-events();
    callback navigate-to-detail(EventStruct);
}

component HighlightText {
    in property <string> text;
    HorizontalLayout {
        spacing: 10px;
        padding-left: 10px;
        Rectangle {
            width: 7px;
            background: Token.color.primary;
        }

        Text {
            text: text;
            font-size: Token.font.title.large.size;
            font-weight: Token.font.title.large.weight;
            vertical-alignment: center;
        }
    }
}

export component MyEventPage inherits Page {
    property <length> card-width: (self.width - 180px) / 3;

    VerticalLayout {
        padding: 50px;
        padding-top: 10px;
        padding-bottom: 10px;
        spacing: 20px;
        HorizontalLayout {
            spacing: 20px;
            HighlightText {
                width: card-width + 20px;
                text: @tr("未开始");
            }

            HighlightText {
                width: card-width + 20px;
                text: @tr("进行中");
            }

            HighlightText {
                width: card-width + 20px;
                text: @tr("已结束");
            }
        }

        HorizontalLayout {
            spacing: 20px;
            ScrollView {
                width: card-width + 20px;
                VerticalLayout {
                    padding: 4px;
                    spacing: 20px;
                    for event-data in MyEventPageBridge.not-started-model: EventCard {
                        width: card-width;
                        event: event-data;
                        clicked => {
                            MyEventPageBridge.navigate-to-detail(self.event);
                        }
                    }
                }
            }

            ScrollView {
                width: card-width + 20px;
                VerticalLayout {
                    padding: 4px;
                    spacing: 20px;
                    for event-data in MyEventPageBridge.active-model: EventCard {
                        width: card-width;
                        event: event-data;
                        clicked => {
                            MyEventPageBridge.navigate-to-detail(self.event);
                        }
                    }
                }
            }

            ScrollView {
                width: card-width + 20px;
                VerticalLayout {
                    padding: 4px;
                    spacing: 20px;
                    for event-data in MyEventPageBridge.completed-model: EventCard {
                        width: card-width;
                        event: event-data;
                        clicked => {
                            MyEventPageBridge.navigate-to-detail(self.event);
                        }
                    }
                }
            }
        }
    }

    PageStateLayer {
        state: MyEventPageBridge.state;
        error-message: MyEventPageBridge.error-message;
        error-retry-message: @tr("重新加载");
        error-retry => {
            MyEventPageBridge.load-events();
        }
    }
}

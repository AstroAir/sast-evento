import { Token } from "../../global.slint";
import { Page, Empty } from "../../components/index.slint";
import { Icon } from "../../modules/surrealism-ui/src/icon/icon.slint";
import { VerticalBox, HorizontalBox, LineEdit, TextEdit } from "std-widgets.slint";
import { SIcon, SCatalog, SStar, SButton } from "../../modules/surrealism-ui/index.slint";


export global DetailPageBridge {
    callback get-event-info();
    callback name();
}

component CommentBlock {
    in-out property <string> comment_text;
    Rectangle {
        border-radius: 20px;
        background: Token.color.surface-container;
        Text {
            x: 20px;
            y: 10px;
            font-size: 23px;
            height: 30px;
            text: "反馈";
            horizontal-alignment: TextHorizontalAlignment.center;
            vertical-alignment: TextVerticalAlignment.center;
        }

        Rectangle {
            x: 20px;
            y: 47px;
            height: parent.height - self.y - self.x;
            width: parent.width - 2 * self.x;
            border-radius: 10px;
            background: Token.color.surface-container-high;
            TextEdit {
                visible: self.height > 40px ? true : false;
                enabled: true;
                font-size: 16px;
                wrap: char-wrap;
                horizontal-alignment: TextHorizontalAlignment.left;
                opacity: 1;
                x: 10px;
                y: 10px;
                width: parent.width - 2 * self.x;
                height: btn.y - 5px - self.y;
                placeholder-text: "请评价一下吧";
            }

            Text {
                visible: self.height > 40px ? false : true;
                x: 10px;
                y: 10px;
                width: parent.width - 2 * self.x;
                height: btn.y - 5px - self.y;
                text: "显示不下了啦QAQ";
                font-size: 16px;
            }

            btn := SButton {
                text: "提交";
                width: 60px;
                height: 20px;
                x: parent.width - self.width - 12px;
                y: parent.height - self.height - 12px;
            }

            SStar {
                score: 3;
                width: 100px;
                height: btn.height;
                x: btn.x - self.width - 12px;
                y: btn.y;
            }
        }
    }
}

component IconText {
    in property <image> icon;
    in property <string> text;
    HorizontalLayout {
        spacing: root.width * 5%;
        icon := Image {
            height: min(root.height, root.width);
            width: self.height;
            source: root.icon;
        }

        Text {
            height: root.height;
            width: root.width - parent.spacing - icon.width;
            text: root.text;
            vertical-alignment: TextVerticalAlignment.center;
            font-size: 16px;
        }
    }
}

component EventInfoBlock {
    info-title := Text {
        x: 0px;
        y: 0px;
        text: "活动信息";
        font-size: 28px;
    }

    in property <[{icon: image, text: string}]> model: [
        { icon: Token.image.icon.home.normal, text: "feipiao,1" },
        { icon: Token.image.icon.home.normal, text: "feipiao,2" },
        { icon: Token.image.icon.home.normal, text: "feipiao,3" },
        { icon: Token.image.icon.home.normal, text: "feipiao,4" },
        { icon: Token.image.icon.home.normal, text: "feipiao,5" },
        { icon: Token.image.icon.home.normal, text: "feipiao,6" },
    ];
    VerticalLayout {
        x: 0px;
        y: 40px;
        spacing: 2px;
        for data in root.model: repeated-icontext := IconText {
            width: parent.width;
            height: (parent.height - parent.y - (model.length - 1) * parent.spacing) / model.length;
            visible: true;
            x: 0px;
            text: data.text;
            icon: Token.image.icon.home.normal;
        }
    }
}

export component DetailPage inherits Page {
    // TODO: implement Detail
    // optional
    background := Empty { }

    layout := VerticalLayout {
        visible: false;
        x: 0;
        y: 0;
        width: 100%;
        height: 100%;
    }

    body := Empty {
        x: 0;
        y: 0;
        width: 100%;
        height: 100%;
        HorizontalBox {
            padding: 30px;
            spacing: 10px;
            recleft := Rectangle {
                width: 50%;
                VerticalLayout {
                    spacing: 20px;
                    Rectangle {
                        height: 55%;
                        EventInfoBlock {
                            x: 40px;
                            y: 0px;
                            width: parent.width - self.x;
                            height: parent.height - self.y;
                        }
                    }

                    Rectangle {
                        CommentBlock {
                            x: 10px;
                            y: 10px;
                            width: parent.width - self.x;
                            height: parent.height - self.y - 10px;
                        }
                    }
                }
            }

            Rectangle {
                // border-width: 3px;
                // border-color: black;

                Image {
                    source: Token.image.icon.evento;
                    x: 20px;
                    y: 20px;
                    width: min(parent.width - self.x, display-rec.y) - 20px;
                    height: self.width;
                }

                display-rec := Rectangle {
                    x: 20px;
                    y: parent.height - self.height - 20px;
                    width: parent.width - self.x;
                    height: 150px;
                    Text {
                        x: 0px;
                        y: 0px;
                        width: 100px;
                        height: 30px;
                        text: "<状态>";
                        font-size: 28px;
                    }

                    SButton {
                        x: 40px;
                        y: 55px;
                        width: parent.width - 2 * self.x;
                        height: 40px;
                        text: "报名";
                    }

                    SButton {
                        x: 40px;
                        y: 105px;
                        width: parent.width - 2 * self.x;
                        height: 40px;
                        text: "签到";
                    }
                }
            }
        }
    }
}
